Index: src/main/java/com/telefonica/cose/provenance/example/Signer.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.telefonica.cose.provenance.example;\r\n\r\nimport com.sun.net.httpserver.HttpServer;\r\nimport com.sun.net.httpserver.HttpHandler;\r\nimport com.sun.net.httpserver.HttpExchange;\r\nimport java.nio.file.Files;\r\nimport java.nio.file.Path;\r\nimport java.net.InetSocketAddress;\r\nimport java.io.OutputStream;\r\nimport java.io.InputStream;\r\nimport java.io.StringReader;\r\nimport java.nio.charset.StandardCharsets;\r\n\r\nimport org.jdom2.Document;\r\nimport org.jdom2.input.SAXBuilder;\r\n\r\nimport com.telefonica.cose.provenance.*;\r\n\r\npublic class Signer {\r\n\r\n\tstatic {\r\n\t\torg.apache.xml.security.Init.init();\r\n\t}\r\n\r\n\tstatic String path = \"provenance-interfaces.xml\";\r\n\r\n\tpublic static void main(String[] args) throws Exception {\r\n\t\t// Create an HTTP server that listens on port 8000\r\n\t\tHttpServer server = HttpServer.create(new InetSocketAddress(8000), 0);\r\n\t\tserver.createContext(\"/sign\", new SignHandler());\r\n\t\tserver.setExecutor(null); // creates a default executor\r\n\t\tserver.start();\r\n\t\tSystem.out.println(\"Server is listening on port 8000...\");\r\n\t}\r\n\r\n\t// HTTP handler for the /sign endpoint\r\n\tstatic class SignHandler implements HttpHandler {\r\n\t\t@Override\r\n\t\tpublic void handle(HttpExchange exchange) {\r\n\t\t\ttry {\r\n\t\t\t\tif (\"POST\".equalsIgnoreCase(exchange.getRequestMethod())) {\r\n\t\t\t\t\t// Read the XML content from the request body\r\n\t\t\t\t\tInputStream inputStream = exchange.getRequestBody();\r\n\t\t\t\t\tString xmlContent = new String(inputStream.readAllBytes(), StandardCharsets.UTF_8);\r\n\r\n\t\t\t\t\t// Instantiate the Signature and Parameter classes\r\n\t\t\t\t\tSignatureInterface sign = new Signature();\r\n\t\t\t\t\tEnclosingMethodInterface enclose = new EnclosingMethods();\r\n\t\t\t\t\tParameters param = new Parameters();\r\n\r\n\t\t\t\t\t// Generate provenance signature as a Base64 string\r\n\t\t\t\t\tString signature = sign.signing(xmlContent, param.getProperty(\"kid\"));\r\n\r\n\t\t\t\t\t// Enclose the previously generated signature into a YANG data provenance xml\r\n\t\t\t\t\tDocument doc = loadXMLDocumentFromString(xmlContent);\r\n\t\t\t\t\tDocument provenanceXML = enclose.enclosingMethod(doc, signature);\r\n\r\n\t\t\t\t\t// Convert the signed XML document back to a string\r\n\t\t\t\t\tString signedXmlContent = new org.jdom2.output.XMLOutputter().outputString(provenanceXML);\r\n\r\n\t\t\t\t\t// Set response headers and write the response\r\n\t\t\t\t\texchange.getResponseHeaders().set(\"Content-Type\", \"application/xml\");\r\n\t\t\t\t\texchange.sendResponseHeaders(200, signedXmlContent.getBytes().length);\r\n\t\t\t\t\tOutputStream outputStream = exchange.getResponseBody();\r\n\t\t\t\t\toutputStream.write(signedXmlContent.getBytes());\r\n\t\t\t\t\toutputStream.close();\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// If it's not a POST request, return a 405 Method Not Allowed\r\n\t\t\t\t\texchange.sendResponseHeaders(405, -1);\r\n\t\t\t\t}\r\n\t\t\t} catch (Exception e) {\r\n\t\t\t\te.printStackTrace();\r\n\t\t\t\ttry {\r\n\t\t\t\t\texchange.sendResponseHeaders(500, -1);\r\n\t\t\t\t} catch (Exception ex) {\r\n\t\t\t\t\tex.printStackTrace();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Method to load XML document from a string using SAXBuilder\r\n\tprivate static Document loadXMLDocumentFromString(String xmlContent) throws Exception {\r\n\t\tSAXBuilder saxBuilder = new SAXBuilder();\r\n\t\ttry (StringReader reader = new StringReader(xmlContent)) {\r\n\t\t\treturn saxBuilder.build(reader);\r\n\t\t}\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/telefonica/cose/provenance/example/Signer.java b/src/main/java/com/telefonica/cose/provenance/example/Signer.java
--- a/src/main/java/com/telefonica/cose/provenance/example/Signer.java	(revision ce76a0159b7a20a204297be684e45f116bf9a2fc)
+++ b/src/main/java/com/telefonica/cose/provenance/example/Signer.java	(date 1730371441739)
@@ -53,7 +53,7 @@
 
 					// Enclose the previously generated signature into a YANG data provenance xml
 					Document doc = loadXMLDocumentFromString(xmlContent);
-					Document provenanceXML = enclose.enclosingMethod(doc, signature);
+					Document provenanceXML = enclose.enclosingMethod3(doc, signature);
 
 					// Convert the signed XML document back to a string
 					String signedXmlContent = new org.jdom2.output.XMLOutputter().outputString(provenanceXML);
